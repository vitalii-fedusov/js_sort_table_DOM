{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CCIA,IAAM,EAAU,AAFH,SAAS,aAAa,CAAC,SAEf,aAAa,CAAC,MAE7B,EAAO,SAAS,aAAa,CAAC,SAE9B,EAAW,EAAK,gBAAgB,CAAC,MAEvC,EAAQ,gBAAgB,CAAC,QAAS,SAAC,CAAnC,EACE,OAAQ,EAAE,MAAM,CAAC,WAAW,EAC1B,IAAK,OACH,IAAM,EAAe,EAAI,GAAU,IAAI,CAAC,SAAC,CAAA,CAAG,CAA5C,EACE,OAAA,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,C,GAG7D,EAAS,OAAO,CAAC,SAAA,CAAjB,EAAyB,OAAA,EAAK,UAAU,CAAC,WAAW,CAAC,E,GACrD,EAAa,OAAO,CAAC,SAAA,CAArB,EAA6B,OAAA,EAAK,WAAW,CAAC,E,GAE9C,KAEF,KAAK,WACH,IAAM,EAAe,EAAI,GAAU,IAAI,CAAC,SAAC,CAAA,CAAG,CAA5C,EACE,OAAA,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,C,GAG7D,EAAS,OAAO,CAAC,SAAA,CAAjB,EAAyB,OAAA,EAAK,UAAU,CAAC,WAAW,CAAC,E,GACrD,EAAa,OAAO,CAAC,SAAA,CAArB,EAA6B,OAAA,EAAK,WAAW,CAAC,E,GAE9C,KAEF,KAAK,MACH,IAAM,EAAe,EAAI,GAAU,IAAI,CAAC,SAAC,CAAA,CAAG,CAA5C,EACE,MAAA,CAAE,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAI,CAAE,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,A,GAGtD,EAAS,OAAO,CAAC,SAAA,CAAjB,EAAyB,OAAA,EAAK,UAAU,CAAC,WAAW,CAAC,E,GACrD,EAAa,OAAO,CAAC,SAAA,CAArB,EAA6B,OAAA,EAAK,WAAW,CAAC,E,GAE9C,KAEF,KAAK,SACH,IAAM,EAAe,EAAI,GAAU,IAAI,CAAC,SAAC,CAAA,CAAG,CAA5C,EAME,OAAO,AAJc,SADF,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,SAAU,IAClB,IAErB,SADF,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,SAAU,IAClB,GAG5C,GAEA,EAAS,OAAO,CAAC,SAAA,CAAjB,EAAyB,OAAA,EAAK,UAAU,CAAC,WAAW,CAAC,E,GACrD,EAAa,OAAO,CAAC,SAAA,CAArB,EAA6B,OAAA,EAAK,WAAW,CAAC,E,EAGlD,CACF,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar head = document.querySelector(\"thead\");\nvar headRow = head.querySelector(\"tr\");\nvar body = document.querySelector(\"tbody\");\nvar bodyRows = body.querySelectorAll(\"tr\");\nheadRow.addEventListener(\"click\", function(e) {\n    switch(e.target.textContent){\n        case \"Name\":\n            var newBodyRows1 = _to_consumable_array(bodyRows).sort(function(a, b) {\n                return a.cells[0].textContent.localeCompare(b.cells[0].textContent);\n            });\n            bodyRows.forEach(function(node) {\n                return node.parentNode.removeChild(node);\n            });\n            newBodyRows1.forEach(function(node) {\n                return body.appendChild(node);\n            });\n            break;\n        case \"Position\":\n            var newBodyRows2 = _to_consumable_array(bodyRows).sort(function(a, b) {\n                return a.cells[1].textContent.localeCompare(b.cells[1].textContent);\n            });\n            bodyRows.forEach(function(node) {\n                return node.parentNode.removeChild(node);\n            });\n            newBodyRows2.forEach(function(node) {\n                return body.appendChild(node);\n            });\n            break;\n        case \"Age\":\n            var newBodyRows3 = _to_consumable_array(bodyRows).sort(function(a, b) {\n                return +a.cells[2].textContent - +b.cells[2].textContent;\n            });\n            bodyRows.forEach(function(node) {\n                return node.parentNode.removeChild(node);\n            });\n            newBodyRows3.forEach(function(node) {\n                return body.appendChild(node);\n            });\n            break;\n        case \"Salary\":\n            var newBodyRows4 = _to_consumable_array(bodyRows).sort(function(a, b) {\n                var aSalaryStr = a.cells[3].textContent.replace(/[^\\d]/g, \"\");\n                var aSalaryValue = parseInt(aSalaryStr, 10);\n                var bSalaryStr = b.cells[3].textContent.replace(/[^\\d]/g, \"\");\n                var bSalaryValue = parseInt(bSalaryStr, 10);\n                return aSalaryValue - bSalaryValue;\n            });\n            bodyRows.forEach(function(node) {\n                return node.parentNode.removeChild(node);\n            });\n            newBodyRows4.forEach(function(node) {\n                return body.appendChild(node);\n            });\n            break;\n    }\n});\n\n//# sourceMappingURL=index.635f9239.js.map\n","'use strict';\n\nconst head = document.querySelector('thead');\n\nconst headRow = head.querySelector('tr');\n\nconst body = document.querySelector('tbody');\n\nconst bodyRows = body.querySelectorAll('tr');\n\nheadRow.addEventListener('click', (e) => {\n  switch (e.target.textContent) {\n    case 'Name':\n      const newBodyRows1 = [...bodyRows].sort((a, b) => (\n        a.cells[0].textContent.localeCompare(b.cells[0].textContent)\n      ));\n\n      bodyRows.forEach(node => node.parentNode.removeChild(node));\n      newBodyRows1.forEach(node => body.appendChild(node));\n\n      break;\n\n    case 'Position':\n      const newBodyRows2 = [...bodyRows].sort((a, b) => (\n        a.cells[1].textContent.localeCompare(b.cells[1].textContent)\n      ));\n\n      bodyRows.forEach(node => node.parentNode.removeChild(node));\n      newBodyRows2.forEach(node => body.appendChild(node));\n\n      break;\n\n    case 'Age':\n      const newBodyRows3 = [...bodyRows].sort((a, b) => (\n        +(a.cells[2].textContent) - +(b.cells[2].textContent)\n      ));\n\n      bodyRows.forEach(node => node.parentNode.removeChild(node));\n      newBodyRows3.forEach(node => body.appendChild(node));\n\n      break;\n\n    case 'Salary':\n      const newBodyRows4 = [...bodyRows].sort((a, b) => {\n        const aSalaryStr = a.cells[3].textContent.replace(/[^\\d]/g, '');\n        const aSalaryValue = parseInt(aSalaryStr, 10);\n        const bSalaryStr = b.cells[3].textContent.replace(/[^\\d]/g, '');\n        const bSalaryValue = parseInt(bSalaryStr, 10);\n\n        return aSalaryValue - bSalaryValue;\n      });\n\n      bodyRows.forEach(node => node.parentNode.removeChild(node));\n      newBodyRows4.forEach(node => body.appendChild(node));\n\n      break;\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","headRow","head","document","querySelector","body","bodyRows","querySelectorAll","addEventListener","e","target","textContent","newBodyRows1","sort","a","b","cells","localeCompare","forEach","node","parentNode","removeChild","appendChild","newBodyRows2","newBodyRows3","newBodyRows4","aSalaryValue","parseInt","replace"],"version":3,"file":"index.635f9239.js.map"}