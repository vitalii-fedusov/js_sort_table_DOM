{"mappings":"AAAA;AAEA,MAAM,OAAO,SAAS,aAAa,CAAC;AAEpC,MAAM,UAAU,KAAK,aAAa,CAAC;AAEnC,MAAM,OAAO,SAAS,aAAa,CAAC;AAEpC,MAAM,WAAW,KAAK,gBAAgB,CAAC;AAEvC,QAAQ,gBAAgB,CAAC,SAAS,CAAC;IACjC,OAAQ,EAAE,MAAM,CAAC,WAAW;QAC1B,KAAK;YACH,MAAM,eAAe;mBAAI;aAAS,CAAC,IAAI,CAAC,CAAC,GAAG,IAC1C,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW;YAG7D,SAAS,OAAO,CAAC,CAAA,OAAQ,KAAK,UAAU,CAAC,WAAW,CAAC;YACrD,aAAa,OAAO,CAAC,CAAA,OAAQ,KAAK,WAAW,CAAC;YAE9C;QAEF,KAAK;YACH,MAAM,eAAe;mBAAI;aAAS,CAAC,IAAI,CAAC,CAAC,GAAG,IAC1C,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW;YAG7D,SAAS,OAAO,CAAC,CAAA,OAAQ,KAAK,UAAU,CAAC,WAAW,CAAC;YACrD,aAAa,OAAO,CAAC,CAAA,OAAQ,KAAK,WAAW,CAAC;YAE9C;QAEF,KAAK;YACH,MAAM,eAAe;mBAAI;aAAS,CAAC,IAAI,CAAC,CAAC,GAAG,IAC1C,CAAE,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,GAAI,CAAE,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW;YAGtD,SAAS,OAAO,CAAC,CAAA,OAAQ,KAAK,UAAU,CAAC,WAAW,CAAC;YACrD,aAAa,OAAO,CAAC,CAAA,OAAQ,KAAK,WAAW,CAAC;YAE9C;QAEF,KAAK;YACH,MAAM,eAAe;mBAAI;aAAS,CAAC,IAAI,CAAC,CAAC,GAAG;gBAC1C,MAAM,aAAa,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU;gBAC5D,MAAM,eAAe,SAAS,YAAY;gBAC1C,MAAM,aAAa,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU;gBAC5D,MAAM,eAAe,SAAS,YAAY;gBAE1C,OAAO,eAAe;YACxB;YAEA,SAAS,OAAO,CAAC,CAAA,OAAQ,KAAK,UAAU,CAAC,WAAW,CAAC;YACrD,aAAa,OAAO,CAAC,CAAA,OAAQ,KAAK,WAAW,CAAC;YAE9C;IACJ;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst head = document.querySelector('thead');\n\nconst headRow = head.querySelector('tr');\n\nconst body = document.querySelector('tbody');\n\nconst bodyRows = body.querySelectorAll('tr');\n\nheadRow.addEventListener('click', (e) => {\n  switch (e.target.textContent) {\n    case 'Name':\n      const newBodyRows1 = [...bodyRows].sort((a, b) => (\n        a.cells[0].textContent.localeCompare(b.cells[0].textContent)\n      ));\n\n      bodyRows.forEach(node => node.parentNode.removeChild(node));\n      newBodyRows1.forEach(node => body.appendChild(node));\n\n      break;\n\n    case 'Position':\n      const newBodyRows2 = [...bodyRows].sort((a, b) => (\n        a.cells[1].textContent.localeCompare(b.cells[1].textContent)\n      ));\n\n      bodyRows.forEach(node => node.parentNode.removeChild(node));\n      newBodyRows2.forEach(node => body.appendChild(node));\n\n      break;\n\n    case 'Age':\n      const newBodyRows3 = [...bodyRows].sort((a, b) => (\n        +(a.cells[2].textContent) - +(b.cells[2].textContent)\n      ));\n\n      bodyRows.forEach(node => node.parentNode.removeChild(node));\n      newBodyRows3.forEach(node => body.appendChild(node));\n\n      break;\n\n    case 'Salary':\n      const newBodyRows4 = [...bodyRows].sort((a, b) => {\n        const aSalaryStr = a.cells[3].textContent.replace(/[^\\d]/g, '');\n        const aSalaryValue = parseInt(aSalaryStr, 10);\n        const bSalaryStr = b.cells[3].textContent.replace(/[^\\d]/g, '');\n        const bSalaryValue = parseInt(bSalaryStr, 10);\n\n        return aSalaryValue - bSalaryValue;\n      });\n\n      bodyRows.forEach(node => node.parentNode.removeChild(node));\n      newBodyRows4.forEach(node => body.appendChild(node));\n\n      break;\n  }\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}